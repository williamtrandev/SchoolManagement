
<div class="bg-light text-center rounded p-3 container-timetable" style="min-height: 80vh; margin-bottom: 100px">
	
	{{#ifEquals (lengthArray timeTables) 0}}
	{{!-- 1 --}}
		<div class="info-notime">
			<img src="/imgs/background_timetable.png" alt="" class="img-fluid">
			<h5 style="font-weight: normal;">Chưa có thời khóa biểu nào</h5>
			<div class="d-flex justify-content-center">
				<button class="btn btn-primary mt-3 me-3" data-toggle="modal" data-target="#addTimetable">Lập thời khóa biểu</button>
				<button class="btn btn-primary mt-3" data-toggle="modal" data-target="#addTimetableByExcel">Nhập từ file</button>
			</div>
		</div>
	{{else}} 
		<div class="wrapper-tableItem">
			{{#each timeTables}}
				<div class="timetableOld btn btn-success w-100 my-2 isUsed-{{isUsed}}" data-id="{{_id}}">{{name}}{{#if isUsed}} - Đang sử dụng {{/if}}</div>
			{{/each}}
			<div class="d-flex justify-content-center">
				<button class="btn btn-primary mt-3 me-3" data-toggle="modal" data-target="#addTimetable">Lập thời khóa biểu</button>
				<button class="btn btn-primary mt-3" data-toggle="modal" data-target="#addTimetableByExcel">Nhập từ file</button>
			</div>
		</div>
	{{/ifEquals}}
	<div class="wrapper-choose d-none">
		<h5>Chọn 2 khối học buổi sáng, 2 khối còn lại sẽ học buổi chiều</h5>
		<button class="btn btn-primary">Khối 6</button>
		<button class="btn btn-primary">Khối 7</button>
		<button class="btn btn-primary">Khối 8</button>
		<button class="btn btn-primary">Khối 9</button>
	</div>
	{{!-- thêm d-none --}}
	<div class="buttons d-none">
		<button class="btn border-0 border-bottom border-primary me-4 btn-morning">Buổi sáng</button>
		<button class="btn border-0 border-bottom btn-afternoon">Buổi chiều</button>
	</div>
	<div class="table-responsive table-morning d-none mon" data-day="2">
		<table class="table table-auto text-center align-middle table-bordered mb-0 mt-3 overflow-auto text-nowrap">
			<tr class="text-dark thead-morning">
				<th scope="col" rowspan="6" style="width: 50px">T2</th>
				<th scope="col">Tiết</th>
			</tr>
			<tr>
				<td scope="col">1</td>
			</tr>
			<tr>
				<td scope="col">2</td>
			</tr>
			<tr>
				<td scope="col">3</td>
				
			</tr>
			<tr>
				<td scope="col">4</td>
				
			</tr>
			<tr>
				<td scope="col">5</td>
				
			</tr>
		</table>
	</div>
	<div class="table-responsive table-morning d-none tues" data-day="3">
		<table class="table text-center align-middle table-bordered mb-0 mt-3 overflow-auto text-nowrap">
			<tr class="text-dark thead-morning">
				<th scope="col" rowspan="6" style="width: 50px">T3</th>
				<th scope="col">Tiết</th>
			</tr>
			<tr>
				<td scope="col">1</td>
				
			</tr>
			<tr>
				<td scope="col">2</td>
				
			</tr>
			<tr>
				<td scope="col">3</td>
				
			</tr>
			<tr>
				<td scope="col">4</td>
				
			</tr>
			<tr>
				<td scope="col">5</td>
				
			</tr>
		</table>
	</div>
	<div class="table-responsive table-morning d-none wed" data-day="4">
		<table class="table text-center align-middle table-bordered mb-0 mt-3 overflow-auto text-nowrap">
			<tr class="text-dark thead-morning">
				<th scope="col" rowspan="6" style="width: 50px">T4</th>
				<th scope="col">Tiết</th>
			</tr>
			<tr>
				<td scope="col">1</td>
				
			</tr>
			<tr>
				<td scope="col">2</td>
				
			</tr>
			<tr>
				<td scope="col">3</td>
				
			</tr>
			<tr>
				<td scope="col">4</td>
				
			</tr>
			<tr>
				<td scope="col">5</td>
				
			</tr>
		</table>
	</div>
	<div class="table-responsive table-morning d-none thurs" data-day="5">
		<table class="table text-center align-middle table-bordered mb-0 mt-3 overflow-auto text-nowrap">
			<tr class="text-dark thead-morning">
				<th scope="col" rowspan="6" style="width: 50px">T5</th>
				<th scope="col">Tiết</th>
			</tr>
			<tr>
				<td scope="col">1</td>
				
			</tr>
			<tr>
				<td scope="col">2</td>
				
			</tr>
			<tr>
				<td scope="col">3</td>
				
			</tr>
			<tr>
				<td scope="col">4</td>
				
			</tr>
			<tr>
				<td scope="col">5</td>
				
			</tr>
		</table>
	</div>
	<div class="table-responsive table-morning d-none fri" data-day="6">
		<table class="table text-center align-middle table-bordered mb-0 mt-3 overflow-auto text-nowrap">
			<tr class="text-dark thead-morning">
				<th scope="col" rowspan="6" style="width: 50px">T6</th>
				<th scope="col">Tiết</th>
			</tr>
			<tr>
				<td scope="col">1</td>
				
			</tr>
			<tr>
				<td scope="col">2</td>
				
			</tr>
			<tr>
				<td scope="col">3</td>
				
			</tr>
			<tr>
				<td scope="col">4</td>
				
			</tr>
			<tr>
				<td scope="col">5</td>
				
			</tr>
		</table>
	</div>
	<div class="table-responsive table-morning d-none satur" data-day="7">
		<table class="table text-center align-middle table-bordered mb-0 mt-3 overflow-auto text-nowrap">
			<tr class="text-dark thead-morning">
				<th scope="col" rowspan="6" style="width: 50px">T7</th>
				<th scope="col">Tiết</th>
			</tr>
			<tr>
				<td scope="col">1</td>
				
			</tr>
			<tr>
				<td scope="col">2</td>
				
			</tr>
			<tr>
				<td scope="col">3</td>
				
			</tr>
			<tr>
				<td scope="col">4</td>
				
			</tr>
			<tr>
				<td scope="col">5</td>
				
			</tr>
		</table>
	</div>
	


	{{!-- Afternoon --}}
	<div class="table-responsive table-afternoon d-none mon" data-day="2">
		<table class="table text-center align-middle table-bordered mb-0 mt-3 overflow-auto text-nowrap">
			<tr class="text-dark thead-afternoon">
				<th scope="col" rowspan="6" style="width: 50px">T2</th>
				<th scope="col">Tiết</th>
			</tr>
			<tr>
				<td scope="col">1</td>
			</tr>
			<tr>
				<td scope="col">2</td>
			</tr>
			<tr>
				<td scope="col">3</td>
				
			</tr>
			<tr>
				<td scope="col">4</td>
				
			</tr>
			<tr>
				<td scope="col">5</td>
				
			</tr>
		</table>
	</div>
	<div class="table-responsive table-afternoon d-none tues" data-day="3">
		<table class="table text-center align-middle table-bordered mb-0 mt-3 overflow-auto text-nowrap">
			<tr class="text-dark thead-afternoon">
				<th scope="col" rowspan="6" style="width: 50px">T3</th>
				<th scope="col">Tiết</th>
			</tr>
			<tr>
				<td scope="col">1</td>
				
			</tr>
			<tr>
				<td scope="col">2</td>
				
			</tr>
			<tr>
				<td scope="col">3</td>
				
			</tr>
			<tr>
				<td scope="col">4</td>
				
			</tr>
			<tr>
				<td scope="col">5</td>
				
			</tr>
		</table>
	</div>
	<div class="table-responsive table-afternoon d-none wed" data-day="4">
		<table class="table text-center align-middle table-bordered mb-0 mt-3 overflow-auto text-nowrap">
			<tr class="text-dark thead-afternoon">
				<th scope="col" rowspan="6" style="width: 50px">T4</th>
				<th scope="col">Tiết</th>
			</tr>
			<tr>
				<td scope="col">1</td>
				
			</tr>
			<tr>
				<td scope="col">2</td>
				
			</tr>
			<tr>
				<td scope="col">3</td>
				
			</tr>
			<tr>
				<td scope="col">4</td>
				
			</tr>
			<tr>
				<td scope="col">5</td>
				
			</tr>
		</table>
	</div>
	<div class="table-responsive table-afternoon d-none thurs" data-day="5">
		<table class="table text-center align-middle table-bordered mb-0 mt-3 overflow-auto text-nowrap">
			<tr class="text-dark thead-afternoon">
				<th scope="col" rowspan="6" style="width: 50px">T5</th>
				<th scope="col">Tiết</th>
			</tr>
			<tr>
				<td scope="col">1</td>
				
			</tr>
			<tr>
				<td scope="col">2</td>
				
			</tr>
			<tr>
				<td scope="col">3</td>
				
			</tr>
			<tr>
				<td scope="col">4</td>
				
			</tr>
			<tr>
				<td scope="col">5</td>
				
			</tr>
		</table>
	</div>
	<div class="table-responsive table-afternoon d-none fri" data-day="6">
		<table class="table text-center align-middle table-bordered mb-0 mt-3 overflow-auto text-nowrap">
			<tr class="text-dark thead-afternoon">
				<th scope="col" rowspan="6" style="width: 50px">T6</th>
				<th scope="col">Tiết</th>
			</tr>
			<tr>
				<td scope="col">1</td>
				
			</tr>
			<tr>
				<td scope="col">2</td>
				
			</tr>
			<tr>
				<td scope="col">3</td>
				
			</tr>
			<tr>
				<td scope="col">4</td>
				
			</tr>
			<tr>
				<td scope="col">5</td>
				
			</tr>
		</table>
	</div>
	<div class="table-responsive table-afternoon d-none satur" data-day="7">
		<table class="table text-center align-middle table-bordered mb-0 mt-3 overflow-auto text-nowrap">
			<tr class="text-dark thead-afternoon">
				<th scope="col" rowspan="6" style="width: 50px">T7</th>
				<th scope="col">Tiết</th>
			</tr>
			<tr>
				<td scope="col">1</td>
				
			</tr>
			<tr>
				<td scope="col">2</td>
				
			</tr>
			<tr>
				<td scope="col">3</td>
				
			</tr>
			<tr>
				<td scope="col">4</td>
				
			</tr>
			<tr>
				<td scope="col">5</td>
				
			</tr>
		</table>
	</div>
</div>



<div class="modal" id="warning">
	<div class="modal-dialog">
		<div class="modal-content">

			<!-- Modal Header -->
			<div class="modal-header">
			<h4 class="modal-title">Modal Heading</h4>
			<button type="button" class="close" data-dismiss="modal">&times;</button>
			</div>

			<!-- Modal body -->
			<div class="modal-body">
			Modal body..
			</div>

			<!-- Modal footer -->
			<div class="modal-footer">
			<button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
			</div>

		</div>
	</div>
</div>

<div class="modal fade" id="addTimetable">
    <div class="modal-dialog">
		<div class="modal-content p-2">
			<!-- Modal Header -->
			<div class="modal-header justify-content-center">
				<h4 class="modal-title">Tạo đợt áp dụng mới</h4>
			</div>
			
			<!-- Modal body -->
			<div class="modal-body">
				<form>
					<div class="form-group mb-3">
						<label style="font-weight: bold" class="mb-1" for="nameTimetable">Tên thời khóa biểu</label>
						<input type="text" class="form-control" id="nameTimetable" required>
					</div>
					
					
				</form>
			</div>
			<!-- Modal footer -->
			<div class="modal-footer">
				<button type="button" class="btn btn-primary btn-save-timetable">Đồng ý</button>
				<button type="button" class="btn border" data-dismiss="modal">Hủy</button>
			</div>
		</div>
	</div>
</div>


<div class="modal fade" id="addTimetableByExcel">
    <div class="modal-dialog">
		<div class="modal-content p-2">
			<!-- Modal Header -->
			<div class="modal-header justify-content-center">
				<h4 class="modal-title">Tạo đợt áp dụng mới</h4>
			</div>
			
			<!-- Modal body -->
			<div class="modal-body">
				<div class="mx-auto">
					<form enctype="multipart/form-data">
						<input type="file" name="file" id="file-input" class="d-none" accept=".xlsx, .xls">
						<label for="file-input" style="cursor: pointer;" class="d-block position-relative text-white bg-primary text-center rounded m-auto p-3"><i class="fas fa-upload"></i>&nbsp;Chọn File để thêm</label>
						<p class="text-primary text-center p-2 mt-3 d-none rounded" style="background: #eff5ff;" id="file-name"></p>
					</form>
					<p class="mt-2">Tải tệp mẫu <a href="/file/Sample_TKB.xlsx" download>tại đây</a></p>
				</div>
			</div>
			<!-- Modal footer -->
			<div class="modal-footer">
				<button type="button" class="btn btn-primary btn-save-timetableByExcel">Đồng ý</button>
				<button type="button" class="btn border" data-dismiss="modal">Hủy</button>
			</div>
		</div>
	</div>
</div>


<div class="navbar fixed-bottom navbar-light bg-light d-flex justify-content-end d-none" style="left: 250px; height: 80px">
	<div class="container-fluid">
		<button class="btn btn-info text-white my-3 btn-save-schedule ms-auto me-3">Lưu</button>
	</div>
</div>

<script>
	$(async function() {
		let classes = [];
		let grade6 = [];
		let grade7 = [];
		let grade8 = [];
		let grade9 = [];
		let newMode = true;
		let nameTimeTable = null;
		await fetch('/admin/getAllClass')
		.then(res => res.json())
		.then(data => classes = data)
		.catch(err => {
			console.log(err);
		});
		classes.forEach(item => {
			if(item.name.charAt(0) == 6) {
				grade6.push(item);
			} else if(item.name.charAt(0) == 7) {
				grade7.push(item);
			} else if(item.name.charAt(0) == 8) {
				grade8.push(item);
			} else if(item.name.charAt(0) == 9) {
				grade9.push(item);
			}
		});
		let gradeMap = {
			'Khối 6': grade6,
			'Khối 7': grade7,
			'Khối 8': grade8,
			'Khối 9': grade9,
		}
		console.log(gradeMap);
		const subjectMap = {
			"Toán": "Toán",
			"Ngữ văn": "N.Văn",
			"Lịch sử và địa lý": "LS & ĐL",
			"Khoa học tự nhiên": "KHTN",
			"Tiếng Anh": "T.Anh",
			"Tin học": "Tin học",
			"Công nghệ": "Công nghệ",
			"Giáo dục công dân": "GDCD",
			"Giáo dục thể chất": "GDTC",
			"Âm nhạc": "Âm nhạc",
			"Mỹ thuật": "Mỹ thuật",
			"Hoạt động trải nghiệm": "HĐTN"
		}
		let arrChoose = [];
		
		$('.select-subject').on('change', '.form-select', function() {
			$(this).closest('td').data('subject', $(this).val());
		})
		$('.btn-save-timetable').click(()=>{
			const nameTable = $('#nameTimetable').val();
			nameTimeTable = nameTable;
			$('#addTimetable').modal('hide');
			$('.info-notime').addClass('d-none');
			const newTimetable = `<div class="timetableDiv">${nameTable}</div>`;
			//$('.wrapper-tableItem').removeClass('d-none').append(newTimetable);
			$('.wrapper-tableItem').addClass('d-none');
			$('.wrapper-choose').removeClass('d-none');
		});
		$('.wrapper-tableItem').on('click', '.timetableDiv', function() {
			$('.wrapper-tableItem').addClass('d-none');
			//$('.table-responsive').removeClass('d-none');
			$('.wrapper-choose').removeClass('d-none');
		})
		$('.wrapper-choose button').click(function() {
			if(arrChoose.length < 2) {
				$(this).attr('disabled', true);
				arrChoose.push($(this).text());
			}
			if(arrChoose.length == 2) {
				arrChoose.sort();
				let ths = ``;
				let tds = ``;
				gradeMap[arrChoose[0]].forEach(item => {
					ths += `<th scope="col">${item.name}</th>`;
					let opts = `<option value="none" selected disabled>Chọn</option>`;
					item.assignments.forEach(assign => {
						const subjectName = subjectMap[assign.subject.name];
						const nameParts = assign.teacher.name.split(" ");
						const lastnameTeacher = nameParts[nameParts.length - 1];
						opts += `<option value="${assign._id}" data-teacher="${assign.teacher._id}">${subjectName}-${lastnameTeacher}</option>`;
					});
					tds += `<td scope="col">
						<select class="form-select w-auto" data-period="$period" data-class="${item._id}" data-className="${item.name}">
							${opts}
						</select>
					</td>`;
				});
				gradeMap[arrChoose[1]].forEach(item => {
					ths += `<th scope="col">${item.name}</th>`;
					let opts = `<option value="none" selected disabled>Chọn</option>`;
					item.assignments.forEach(assign => {
						const subjectName = subjectMap[assign.subject.name];
						const nameParts = assign.teacher.name.split(" ");
						const lastnameTeacher = nameParts[nameParts.length - 1];
						opts += `<option value="${assign._id}" data-teacher="${assign.teacher._id}">${subjectName}-${lastnameTeacher}</option>`;
					});
					tds += `<td scope="col">
						<select class="form-select w-auto" data-period="$period" data-class="${item._id}" data-className="${item.name}">
							${opts}
						</select>
					</td>`;
				});

				const remainingGrade = Object.keys(gradeMap).filter(key => !arrChoose.includes(key));
				remainingGrade.sort();
				let thsAf = ``;
				let tdsAf = ``;
				gradeMap[remainingGrade[0]].forEach(item => {
					thsAf += `<th scope="col">${item.name}</th>`;
					let opts = `<option value="none" selected disabled>Chọn</option>`;
					item.assignments.forEach(assign => {
						const subjectName = subjectMap[assign.subject.name];
						const nameParts = assign.teacher.name.split(" ");
						const lastnameTeacher = nameParts[nameParts.length - 1];
						opts += `<option value="${assign._id}" data-teacher="${assign.teacher._id}">${subjectName}-${lastnameTeacher}</option>`;
					});
					tdsAf += `<td scope="col">
						<select class="form-select w-auto" data-period="$period" data-class="${item._id}" data-className="${item.name}">
							${opts}
						</select>
					</td>`;
				});
				gradeMap[remainingGrade[1]].forEach(item => {
					thsAf += `<th scope="col">${item.name}</th>`;
					let opts = `<option value="none" selected disabled>Chọn</option>`;
					item.assignments.forEach(assign => {
						const subjectName = subjectMap[assign.subject.name];
						const nameParts = assign.teacher.name.split(" ");
						const lastnameTeacher = nameParts[nameParts.length - 1];
						opts += `<option value="${assign._id}" data-teacher="${assign.teacher._id}">${subjectName}-${lastnameTeacher}</option>`;
					});
					tdsAf += `<td scope="col">
						<select class="form-select w-auto" data-period="$period" data-class="${item._id}" data-className="${item.name}">
							${opts}
						</select>
					</td>`;
				});
				$('.wrapper-choose').addClass('d-none');
				$('.table-morning').removeClass('d-none');
				$('.fixed-bottom').removeClass('d-none');
				//$('.table-afternoon').removeClass('d-none');
				$('.buttons').removeClass('d-none');
				$('.table-morning tr').not($('.thead-morning')).append(tds);
				let optionsCC = `<select class="form-select">
					<option>Chào cờ</option>
				</select>`;
				const tdsCC = $($('.table-morning.mon').find('tr').eq(1)).find('td');
				const firstTd = tdsCC.first();
				tdsCC.each(function() {
					$(this).not(firstTd).empty().append(optionsCC);
				});
				let optionsSH = `<select class="form-select">
					<option>Sinh hoạt CN</option>
				</select>`;
				const tdsSH = $($('.table-morning.satur').find('tr').eq(5)).find('td');
				const firstTdSH = tdsSH.first();
				tdsSH.each(function() {
					$(this).not(firstTdSH).empty().append(optionsSH);
				});
				$('.thead-morning').append(ths);
				$('.table-afternoon tr').not($('.thead-afternoon')).append(tdsAf);
				$('.thead-afternoon').append(thsAf);
			}
		})
		$('.btn-morning').click(()=> {
			$('.btn-morning').addClass('border-primary');
			$('.btn-afternoon').removeClass('border-primary');
			$('.table-morning').removeClass('d-none');
			$('.table-afternoon').addClass('d-none');
		});
		$('.btn-afternoon').click(()=> {
			if(newMode) {
				let optionsCC = `<select class="form-select">
					<option>Chào cờ</option>
				</select>`;
				let optionsSH = `<select class="form-select">
						<option>Sinh hoạt CN</option>
					</select>`;
				const tdsCCAf = $($('.table-afternoon.mon').find('tr').eq(5)).find('td');
				console.log(tdsCCAf)
				const firstTdAf = tdsCCAf.first();
				tdsCCAf.each(function() {
					$(this).not(firstTdAf).empty().append(optionsCC);
				});
				const tdsSHAf = $($('.table-afternoon.satur').find('tr').eq(5)).find('td');
				const firstTdSHAf = tdsSHAf.first();
				tdsSHAf.each(function() {
					$(this).not(firstTdSHAf).empty().append(optionsSH);
				});
				
			} else {
				let textCC = `Chào cờ`;
				let textSH = `Sinh hoạt CN`;
				const tdsCCAf = $($('.table-afternoon.mon').find('tr').eq(5)).find('td');
				console.log(tdsCCAf)
				const firstTdAf = tdsCCAf.first();
				tdsCCAf.each(function() {
					$(this).not(firstTdAf).text(textCC);
				});
				const tdsSHAf = $($('.table-afternoon.satur').find('tr').eq(5)).find('td');
				const firstTdSHAf = tdsSHAf.first();
				tdsSHAf.each(function() {
					$(this).not(firstTdSHAf).text(textSH);
				});
			}
			$('.btn-afternoon').addClass('border-primary');
			$('.btn-morning').removeClass('border-primary');
			$('.table-morning').addClass('d-none');
			$('.table-afternoon').removeClass('d-none');
		});
		$('tr').on('change', '.form-select', function() {
			let selectsInRow = $(this).closest('tr').find('select');
			const selectedTeacher = $(this).find('option:selected').data('teacher');
			const currentItem = $(this);
			console.log(currentItem);
			const selectedClass = $(this).data('class');
			let i = 1;
			selectsInRow.each(function() {
				console.log('Td:' + i++);
				console.log('select:'+$(this).find('option:selected').data('teacher'));
				console.log(this)
				console.log('\n========================================\n');
				if (selectedTeacher === $(this).find('option:selected').data('teacher') && selectedClass !== $(this).data('class')) {
					toastr.error('Trùng lịch giảng với lớp ' + $(this).data('classname'));
					currentItem.val('none'); // Xóa giá trị đã chọn
				}
			});
		});
		function handleGetTable(schedules, trs, dayOfWeek, isAfternoon) {
			let flag = true;
			trs.each(function() {
				let period = parseInt($(this).closest('tr').find('td').first().text());
				if(isAfternoon) period += 5;
				//console.log(period);
				// Lấy từng ô phân công
				const selectedMon = $(this).find('select');
				// Duyệt từng hàng ở mỗi thứ
				selectedMon.each(function() {
					const assignmentId = $(this).val();
					if(assignmentId === null) flag = false;
					schedules.push({
						assignmentId,
						dayOfWeek: dayOfWeek,
						period,
					});
				});	
			});
			return flag;
		}
		$('.btn-save-schedule').click(() => {
			const schedules = [];
			let flag = true;
			$('.table-morning').each(function(index) {
				let trs = $(this).find('tr');
				if($(this).hasClass('mon')) {
					trs = trs.slice(2);
				} else if($(this).hasClass('satur')) {
					trs = trs.slice(1, -1);
				} else {
					trs = trs.slice(1);
				}
				flag = handleGetTable(schedules, trs, index+2, false);
			});
			$('.table-afternoon').each(function(index) {
				let trs = $(this).find('tr');
				if($(this).hasClass('mon')) {
					trs = trs.slice(1, -1);
				} else if($(this).hasClass('satur')) {
					trs = trs.slice(1, -1);
				} else {
					trs = trs.slice(1);
				}
				flag = handleGetTable(schedules, trs, index+2, true);
			});
			if(!flag) {
				toastr.error('Chưa phân công đầy đủ các lớp');
				return;
			}
			console.log(schedules);
			console.log(nameTimeTable);
			fetch(`/admin/addSchedule`, {
				method: 'POST',
				headers: { 'Content-Type': 'application/json' },
				body: JSON.stringify({ nameTimeTable, schedules })
			})
			.then(res => {
				if(!res.ok) throw new Error('Lỗi');
				return res.json();
			})
			.then(data => {
				toastr.success('Thêm thời khóa biểu mới thành công');
			})
			.catch(error => {
				console.log(error);
				toastr.error('Đã có lỗi xảy ra');
			});
		})
		const timetableMorningMap = {};
		const timetableAfternoonMap = {};
		$('.timetableOld').click(function() {
			let thisTimeTable = $(this);
			if($(this).hasClass('isUsed-false')) {
				Swal.fire({
					title: 'Chọn chế độ',
					text: 'Chọn xem thời khóa biểu hoặc dùng thời khóa biểu này',
					icon: 'info',
					showCancelButton: true,
					confirmButtonText: 'Xem thời khóa biểu',
					cancelButtonText: 'Dùng thời khóa biểu này'
				}).then(async (result) => {
					const idTimeTable = $(this).data('id');
					if (result.isConfirmed) {
						newMode = false;
						fetch(`/admin/getTimeTable/${idTimeTable}`)
						.then(res => {
							if(!res.ok) throw new Error('Lỗi');
							return res.json();
						})
						.then(data => {
							let ths = ``;
							let tds = ``;
							data.morningClassNames.forEach(item => {
								ths += `<th scope="col">${item}</th>`;
							});
							$('.table-morning tbody tr').each(function() {
								if(!$(this).hasClass('thead-morning')) {
									let tds = ``;
									for(let i = 0; i < data.morningClassNames.length; i++) {
										tds += `<td></td>`;
									}
									$(this).append(tds);
								}
							})
							let thsAf = ``;
							let tdsAf = ``;
							data.afternoonClassNames.forEach(item => {
								thsAf += `<th scope="col">${item}</th>`;
							});
							console.log(data.morningSchedules)
							$('.wrapper-tableItem').addClass('d-none');
							$('.wrapper-choose').addClass('d-none');
							$('.table-morning').removeClass('d-none');
							$('.buttons').removeClass('d-none');
							$('.table-morning tr').not($('.thead-morning')).append(tds);
							let textCC = `Chào cờ`;
							const tdsCC = $($('.table-morning.mon').find('tr').eq(1)).find('td');
							console.log(tdsCC)
							const firstTd = tdsCC.first();
							tdsCC.each(function() {
								$(this).not(firstTd).text(textCC);
							});
							let textSH = `Sinh hoạt CN`;
							const tdsSH = $($('.table-morning.satur').find('tr').eq(5)).find('td');
							const firstTdSH = tdsSH.first();
							tdsSH.each(function() {
								$(this).not(firstTdSH).text(textSH);
							});
							
							data.morningSchedules.forEach(item => {
								if(!timetableMorningMap[`${item.dayOfWeek}_${item.period}`]) {
									timetableMorningMap[`${item.dayOfWeek}_${item.period}`] = [];
								}
								timetableMorningMap[`${item.dayOfWeek}_${item.period}`].push(item);
							})
							console.log(timetableMorningMap)
							$('.table-morning').each(function(index) {
								let trs = $(this).find('tr');
								const dayOfWeek = $(this).data('day');
								let isSatur = false;
								let startPeriod = 1;
								console.log(dayOfWeek);
								if($(this).hasClass('mon')) {
									trs = trs.slice(2);
									startPeriod = 2;
								} else if($(this).hasClass('satur')) {
									trs = trs.slice(1, -1);
									isSatur = true;
								} else {
									trs = trs.slice(1);
								}
								trs.each(function() {
									let tds = ``;
									if(startPeriod === 5 && isSatur) return;
									$(this).find('td').slice(1).each(function(index) {
										const schedule = timetableMorningMap[`${dayOfWeek}_${startPeriod}`][index];
										let content = `<p>${schedule.assignment.subject.name}</p>
										<i>(${schedule.assignment.teacher.name})</i>`;
										$(this).empty().append(content);
									})
									startPeriod++;
								});
							});

							
							
							$('.thead-morning').append(ths);
							$('.table-afternoon tr').not($('.thead-afternoon')).append(tdsAf);
							$('.table-afternoon tbody tr').each(function() {
								if(!$(this).hasClass('thead-afternoon')) {
									let tds = ``;
									for(let i = 0; i < data.afternoonClassNames.length; i++) {
										tds += `<td></td>`;
									}
									$(this).append(tds);
								}
							})
							$('.thead-afternoon').append(thsAf);
							data.afternoonSchedules.forEach(item => {
								if(!timetableAfternoonMap[`${item.dayOfWeek}_${item.period}`]) {
									timetableAfternoonMap[`${item.dayOfWeek}_${item.period}`] = [];
								}
								timetableAfternoonMap[`${item.dayOfWeek}_${item.period}`].push(item);
							})
							console.log(timetableAfternoonMap)
							$('.table-afternoon').each(function(index) {
								let trs = $(this).find('tr');
								const dayOfWeek = $(this).data('day');
								let isMonAndSatur = false;
								let startPeriod = 6;
								console.log(dayOfWeek);
								if($(this).hasClass('mon')) {
									trs = trs.slice(1, -1);
									isMonAndSatur = true;
								} else if($(this).hasClass('satur')) {
									trs = trs.slice(1, -1);
									isMonAndSatur = true;
								} else {
									trs = trs.slice(1);
								}
								trs.each(function() {
									let tds = ``;
									if(startPeriod === 10 && isMonAndSatur) return;
									$(this).find('td').slice(1).each(function(index) {
										const schedule = timetableAfternoonMap[`${dayOfWeek}_${startPeriod}`][index];
										let content = `<p>${schedule.assignment.subject.name}</p>
										<i>(${schedule.assignment.teacher.name})</i>`;
										$(this).empty().append(content);
									})
									startPeriod++;
								});
							});
						})
						.catch(error => {
							console.log(error);
							toastr.error('Lỗi');
						});

						
					} else if (result.dismiss === Swal.DismissReason.cancel) {
						fetch(`/admin/useTimeTable/${idTimeTable}`)
						.then(res => {
							if(!res.ok) throw new Error('Lỗi');
							return res.json();
						})
						.then(data => {
							Swal.fire(
								'Thành công',
								'Đã áp dụng thời khóa biểu này',
								'success'
							);
							let usedText = $('.timetableOld.isUsed-true').text();
							$('.timetableOld.isUsed-true')
								.removeClass('isUsed-true')
								.addClass('isUsed-false')
								.text(usedText.replace(' - Đang sử dụng', ''));
							thisTimeTable
								.removeClass('isUsed-false')
								.addClass('isUsed-true')
								.text(thisTimeTable.text() + ' - Đang sử dụng');
						})
						.catch(err => {
							Swal.fire(
								'Thất bại',
								'Áp dụng thời khóa biểu không thành công',
								'error'
							);
						});
						
					}
				});
			} else {
				newMode = false;
				const idTimeTable = $(this).data('id');
				fetch(`/admin/getTimeTable/${idTimeTable}`)
				.then(res => {
					if(!res.ok) throw new Error('Lỗi');
					return res.json();
				})
				.then(data => {
					let ths = ``;
					let tds = ``;
					data.morningClassNames.forEach(item => {
						ths += `<th scope="col">${item}</th>`;
					});
					$('.table-morning tbody tr').each(function() {
						if(!$(this).hasClass('thead-morning')) {
							let tds = ``;
							for(let i = 0; i < data.morningClassNames.length; i++) {
								tds += `<td></td>`;
							}
							$(this).append(tds);
						}
					})
					let thsAf = ``;
					let tdsAf = ``;
					data.afternoonClassNames.forEach(item => {
						thsAf += `<th scope="col">${item}</th>`;
					});
					console.log(data.morningSchedules)
					$('.wrapper-tableItem').addClass('d-none');
					$('.wrapper-choose').addClass('d-none');
					$('.table-morning').removeClass('d-none');
					$('.buttons').removeClass('d-none');
					$('.table-morning tr').not($('.thead-morning')).append(tds);
					let textCC = `Chào cờ`;
					const tdsCC = $($('.table-morning.mon').find('tr').eq(1)).find('td');
					console.log(tdsCC)
					const firstTd = tdsCC.first();
					tdsCC.each(function() {
						$(this).not(firstTd).text(textCC);
					});
					let textSH = `Sinh hoạt CN`;
					const tdsSH = $($('.table-morning.satur').find('tr').eq(5)).find('td');
					const firstTdSH = tdsSH.first();
					tdsSH.each(function() {
						$(this).not(firstTdSH).text(textSH);
					});
					
					data.morningSchedules.forEach(item => {
						if(!timetableMorningMap[`${item.dayOfWeek}_${item.period}`]) {
							timetableMorningMap[`${item.dayOfWeek}_${item.period}`] = [];
						}
						timetableMorningMap[`${item.dayOfWeek}_${item.period}`].push(item);
					})
					console.log(timetableMorningMap)
					$('.table-morning').each(function(index) {
						let trs = $(this).find('tr');
						const dayOfWeek = $(this).data('day');
						let isSatur = false;
						let startPeriod = 1;
						console.log(dayOfWeek);
						if($(this).hasClass('mon')) {
							trs = trs.slice(2);
							startPeriod = 2;
						} else if($(this).hasClass('satur')) {
							trs = trs.slice(1, -1);
							isSatur = true;
						} else {
							trs = trs.slice(1);
						}
						trs.each(function() {
							let tds = ``;
							if(startPeriod === 5 && isSatur) return;
							$(this).find('td').slice(1).each(function(index) {
								const schedule = timetableMorningMap[`${dayOfWeek}_${startPeriod}`][index];
								let content = `<p>${schedule.assignment.subject.name}</p>
								<i>(${schedule.assignment.teacher.name})</i>`;
								$(this).empty().append(content);
							})
							startPeriod++;
						});
					});

					
					
					$('.thead-morning').append(ths);
					$('.table-afternoon tr').not($('.thead-afternoon')).append(tdsAf);
					$('.table-afternoon tbody tr').each(function() {
						if(!$(this).hasClass('thead-afternoon')) {
							let tds = ``;
							for(let i = 0; i < data.afternoonClassNames.length; i++) {
								tds += `<td></td>`;
							}
							$(this).append(tds);
						}
					})
					$('.thead-afternoon').append(thsAf);
					data.afternoonSchedules.forEach(item => {
						if(!timetableAfternoonMap[`${item.dayOfWeek}_${item.period}`]) {
							timetableAfternoonMap[`${item.dayOfWeek}_${item.period}`] = [];
						}
						timetableAfternoonMap[`${item.dayOfWeek}_${item.period}`].push(item);
					})
					console.log(timetableAfternoonMap)
					$('.table-afternoon').each(function(index) {
						let trs = $(this).find('tr');
						const dayOfWeek = $(this).data('day');
						let isMonAndSatur = false;
						let startPeriod = 6;
						console.log(dayOfWeek);
						if($(this).hasClass('mon')) {
							trs = trs.slice(1, -1);
							isMonAndSatur = true;
						} else if($(this).hasClass('satur')) {
							trs = trs.slice(1, -1);
							isMonAndSatur = true;
						} else {
							trs = trs.slice(1);
						}
						trs.each(function() {
							let tds = ``;
							if(startPeriod === 10 && isMonAndSatur) return;
							$(this).find('td').slice(1).each(function(index) {
								const schedule = timetableAfternoonMap[`${dayOfWeek}_${startPeriod}`][index];
								let content = `<p>${schedule.assignment.subject.name}</p>
								<i>(${schedule.assignment.teacher.name})</i>`;
								$(this).empty().append(content);
							})
							startPeriod++;
						});
					});
				})
				.catch(error => {
					console.log(error);
					toastr.error('Lỗi');
				});
			}
			
		});
		$('#file-input').change(() => {
			let name = $('#file-input')[0].files[0].name;
			$('#file-name').text(name);
			$('#file-name').removeClass('d-none');
		});
		$(".btn-save-timetableByExcel").click(() => {
			const file = $('#file-input')[0].files[0];
			if(file) {
				const formData = new FormData();
				formData.append('file', file);
				$('#spinner').addClass('show');
				fetch('/admin/addTimeTableByExcel', {
					method: 'POST',
					body: formData,
				})
				.then(response => {
					if(!response.ok) {
						throw new Error('Lỗi');
					}
					return response.json();
				})
				.then(data => {
					console.log(data);
					$('#spinner').removeClass('show');
					toastr.success('Lưu thành công');
					setTimeout(() => {
						window.location.reload();
					}, 1000);
				})
				.catch(error => {
					console.error(error);
					$('#spinner').removeClass('show');
					toastr.error('Lỗi hệ thống');
				});
			}
		});
	})
</script>