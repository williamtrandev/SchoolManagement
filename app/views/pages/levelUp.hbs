<div class="container text-center wrapper-start" id="">
	<img src="/imgs/background_levelUp.png" alt="" class="img-fluid" style="max-height: 70vh">
	<p><button class="btn btn-primary start-levelUp">Bắt đầu xét lên lớp</button></p>
</div>
<div class="bg-light text-center rounded p-4 d-none wrapper-levelUp">
	<div class="d-flex justify-content-between mb-4">
		<div class="d-flex align-items-center">
			<label class="me-3" for="gradeSelect">Chọn khối:</label>
			<select class="form-select w-auto" id="gradeSelect">
				<option value="none" disabled selected>Chọn khối</option>
				<option value="6">Khối 6</option>
				<option value="7">Khối 7</option>
				<option value="8">Khối 8</option>
				<option value="9">Khối 9</option>
			</select>
			<label class="ms-4 me-3" for="classSelect">Chọn lớp:</label>
			<select class="form-select w-auto" id="classSelect">
				{{!-- Class thì dùng fetch --}}
				<option value="none" disabled selected>Chọn lớp</option>
			</select>
		</div>
		<button class="btn btn-primary btn-confirm-levelUp">Xác nhận xét</button>
	</div>
	<div class="table-responsive">
		<table class="table text-center align-middle table-bordered table-hover mb-0 overflow-auto text-nowrap" id="levelUp-table">
			<thead>
				<tr class="text-dark">
					<th scope="col">Mã học sinh</th>
					<th scope="col">Tên học sinh</th>
					<th scope="col">ĐTB cả năm</th>
					<th scope="col">Kết quả học tập</th>
					<th scope="col">Kết quả rèn luyện</th>
					<th scope="col">Số ngày nghỉ</th>
					<th scope="col">Xét lên lớp, lưu ban</th>
				</tr>
			</thead>
			<tbody>
				{{#each students}}
					<tr>
						<td>{{studentId}}</td>
						<td>{{name}}</td>
						<td>{{avgPoint}}</td>
						<td>{{academicPerformance}}</td>
						<td>{{conduct}}</td>
						<td>{{numAbsent}}</td>
						<td>{{result}}</td>
					</tr>

				{{/each}}
			</tbody>
		</table>
	</div>
</div>


<script>
	let studentsMap = {};
	let studentsLuuBan = {};
	let studentsLenLop = {};
	let allClass = [];
	$('.start-levelUp').click(() => {
		Swal.fire({
			title: 'Xác nhận xét lên lớp',
			text: 'Có chắc chắn? Thao tác này sẽ thêm mới năm học',
			icon: 'warning',
			showCancelButton: true,
			confirmButtonText: 'Đồng ý',
			cancelButtonText: 'Hủy'
		}).then(async (result) => {
			if (result.isConfirmed) {
				$('.wrapper-start').addClass('d-none');
				$('.wrapper-levelUp').removeClass('d-none');
				$('#spinner').addClass('show');
				await fetch(`/admin/getLevelUp`)
				.then(res => res.json())
				.then(data => {
					studentsMap = data;
					console.log(studentsMap);
					// Lặp qua từng key (tên lớp) trong object studentsMap
					for (const className in studentsMap) {
						if (Object.hasOwnProperty.call(studentsMap, className)) {
							// Lọc sinh viên có result là 'Lưu ban' từ mảng sinh viên của lớp hiện tại
							const studentsLuuBanFiltered = studentsMap[className].filter(student => {
								return student.result === 'Lưu ban';
							});
							// Lọc sinh viên có result là 'Lên lớp' từ mảng sinh viên của lớp hiện tại
							const studentsLenLopFiltered = studentsMap[className].filter(student => {
								return student.result === 'Lên lớp';
							});

							// Nếu có sinh viên thỏa điều kiện, thêm vào object riêng
							if (studentsLuuBanFiltered.length > 0) {
								studentsLuuBan[className] = studentsLuuBanFiltered;
							}
							if (studentsLenLopFiltered.length > 0) {
								studentsLenLop[className] = studentsLenLopFiltered;
							}
						}
					}
					console.log(studentsLuuBan);
					console.log(studentsLenLop);
					$('#spinner').removeClass('show');
				})
				.catch(err => console.log(err))

				
			} else if (result.isDismiss === Swal.DismissReason.cancel) {
				Swal.fire('Hủy', 'Bạn đã hủy việc thêm!', 'error');
			}
		});
		
	})
	
	$(async function() {
		fetch(`/admin/getAllClass`)
		.then(res => res.json())
		.then(data => {
			allClass = data;
			let options = `<option value="none">Chọn</option>`;
			data.forEach(item => {
				options += `<option value="${item.name}">${item.name}</option>`;
			})
			$('#classSelect').empty().append(options);
		})	
		.catch(err => console.log(err))

		$('#gradeSelect').change(function() {
			let grade = $(this).val();
			let filterClass = allClass.filter(item => item.name.charAt(0) === grade);
			let options = `<option value="none">Chọn</option>`;
			filterClass.forEach(item => {
				options += `<option value="${item.name}">${item.name}</option>`;
			})
			$('#classSelect').empty().append(options);
		})
		$('#classSelect').change(function() {
			let choose = $(this).val();
			let trs = ``;
			studentsMap[choose].forEach(student => {
				trs += `<tr>
					<td>${student.studentId}</td>
					<td>${student.name}</td>
					<td>${student.pointAvg}</td>
					<td>${student.academicPerformance}</td>
					<td>${student.conduct}</td>
					<td>${student.numAbsent}</td>
					<td>${student.result}</td>
				</tr>`
			})
			$('#levelUp-table tbody').empty().append(trs);
		})
	})
</script>